<Window
    x:Class="McProtocolNextDemo.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:McProtocolNextDemo.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:McProtocolNextDemo"
    xmlns:masLoad="clr-namespace:McProtocolNextDemo.Controls.LoadAnimation"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:vm="clr-namespace:McProtocolNextDemo.ViewModels.Windows"
    Title="McProtocolNext"
    Width="1024"
    Height="600"
    d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
    AllowsTransparency="True"
    Background="Transparent"
    Cursor="{DynamicResource Pointer}"
    FontFamily="{DynamicResource GlobalFontFamily}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    ResizeMode="NoResize"
    WindowStartupLocation="Manual"
    WindowStyle="None"
    mc:Ignorable="d">

    <Window.Resources>
        <ResourceDictionary>
            <ControlTemplate x:Key="CustomListBoxTemplate" TargetType="ListBox">
                <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                    <hc:ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <ItemsPresenter />
                    </hc:ScrollViewer>
                </Border>
            </ControlTemplate>
            <Style x:Key="CustomListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ListViewItemBackground}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                                    <Setter Property="BorderThickness" Value="1" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="Gray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <converters:StateToVisibilityConverter x:Key="StateToVisibilityConverter" />
            <converters:InfoLevelToIconColorConverter x:Key="InfoLevelToIconColorConverter" />
            <converters:InfoLevelToIconKindConverter x:Key="InfoLevelToIconKindConverter" />
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Border
            x:Name="OuterBorder"
            BorderBrush="{DynamicResource PopupBorderCornerRadiusBrush}"
            BorderThickness="1.5"
            ClipToBounds="True"
            CornerRadius="10">
            <Border
                Background="{DynamicResource PrismaTalkBackgroundBrush}"
                ClipToBounds="True"
                CornerRadius="10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid
                        Grid.Row="0"
                        Background="Transparent"
                        MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                        <Grid Margin="10">
                            <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                <Ellipse
                                    Width="16"
                                    Height="16"
                                    Margin="0,0,10,0"
                                    VerticalAlignment="Center">
                                    <Ellipse.Style>
                                        <Style TargetType="Ellipse">
                                            <Setter Property="Fill" Value="Gray" />
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <DropShadowEffect
                                                        BlurRadius="10"
                                                        Opacity="0.5"
                                                        ShadowDepth="0"
                                                        Color="Gray" />
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsConnect}" Value="True">
                                                    <Setter Property="Fill" Value="LimeGreen" />
                                                    <Setter Property="Effect">
                                                        <Setter.Value>
                                                            <DropShadowEffect
                                                                BlurRadius="10"
                                                                Opacity="1"
                                                                ShadowDepth="0"
                                                                Color="LimeGreen" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Ellipse.Style>
                                </Ellipse>
                                <TextBlock FontWeight="Bold" Text="Mc Protocol Next GUI" />
                            </StackPanel>

                            <Button
                                Width="35"
                                Height="35"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Command="{Binding CloseWindowCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                Content="{ui:SymbolIcon Symbol=Dismiss20}"
                                FontSize="16"
                                Template="{StaticResource RoundedButtonTemplate}"
                                ToolTip="Close" />
                        </Grid>
                    </Grid>

                    <TextBlock
                        Grid.Row="1"
                        Margin="10,0,0,15"
                        Foreground="Gray"
                        Text="{Binding Source={StaticResource LanguageManager}, Path=[NextGenAsyncMitsubishiMCProtocol], Mode=OneWay}" />

                    <Grid Grid.Row="2" Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <ScrollViewer
                            Grid.Column="0"
                            Margin="0,0,10,0"
                            VerticalScrollBarVisibility="Auto">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Button
                                        Width="40"
                                        Height="30"
                                        Margin="0,0,10,0"
                                        Command="{Binding StateSwitchCommand}"
                                        ToolTip="{Binding Source={StaticResource LanguageManager}, Path=[ToggleConnectionStatus], Mode=OneWay}"
                                        ToolTipService.InitialShowDelay="100">
                                        <Grid>
                                            <StackPanel Margin="-2,-2,-2,-2" Visibility="{Binding CurrentState, Converter={StaticResource StateToVisibilityConverter}, ConverterParameter='Starting,Stopping'}">
                                                <masLoad:CircularProgressIndicator />
                                            </StackPanel>
                                            <StackPanel Visibility="{Binding CurrentState, Converter={StaticResource StateToVisibilityConverter}, ConverterParameter='Stopped'}">
                                                <ui:SymbolIcon Symbol="PlugConnected20" />
                                            </StackPanel>
                                            <StackPanel Visibility="{Binding CurrentState, Converter={StaticResource StateToVisibilityConverter}, ConverterParameter='Running'}">
                                                <ui:SymbolIcon Symbol="Power24" />
                                            </StackPanel>
                                        </Grid>
                                    </Button>

                                    <Button
                                        Margin="0,0,10,0"
                                        Command="{Binding ClearContentCommand}"
                                        ToolTip="{Binding Source={StaticResource LanguageManager}, Path=[ClearContent], Mode=OneWay}"
                                        ToolTipService.InitialShowDelay="100">
                                        <StackPanel>
                                            <md:PackIcon Kind="TextBoxRemoveOutline" />
                                        </StackPanel>
                                    </Button>

                                    <Button
                                        Command="{Binding CreateNewWindowCommand}"
                                        ToolTip="{Binding Source={StaticResource LanguageManager}, Path=[CreateNewWindow], Mode=OneWay}"
                                        ToolTipService.InitialShowDelay="100">
                                        <StackPanel>
                                            <md:PackIcon Kind="WindowRestore" />
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <Separator Margin="0,5" />

                                <StackPanel>
                                    <StackPanel Margin="0,5">
                                        <StackPanel>
                                            <Label Content="{Binding Source={StaticResource LanguageManager}, Path=[ProtocolFrame], Mode=OneWay}" FontWeight="SemiBold" />
                                        </StackPanel>
                                        <StackPanel>
                                            <ComboBox ItemsSource="{Binding Config.McProtocols.ProtocolFrameOptions}" SelectedItem="{Binding Config.McProtocols.ProtocolFrame, Mode=TwoWay}" />
                                        </StackPanel>
                                    </StackPanel>

                                    <StackPanel Margin="0,5">
                                        <StackPanel>
                                            <Label Content="{Binding Source={StaticResource LanguageManager}, Path=[DevAddr], Mode=OneWay}" FontWeight="SemiBold" />
                                        </StackPanel>
                                        <StackPanel>
                                            <TextBox Text="{Binding Config.McProtocols.Ip, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                    </StackPanel>

                                    <StackPanel Margin="0,5">
                                        <StackPanel>
                                            <Label Content="{Binding Source={StaticResource LanguageManager}, Path=[Port], Mode=OneWay}" FontWeight="SemiBold" />
                                        </StackPanel>
                                        <StackPanel>
                                            <TextBox Text="{Binding Config.McProtocols.Port, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                    </StackPanel>

                                    <StackPanel Margin="0,5">
                                        <StackPanel Orientation="Horizontal">
                                            <Label
                                                Margin="0,0,10,5"
                                                HorizontalAlignment="Left"
                                                Content="{Binding Source={StaticResource LanguageManager}, Path=[HeartbeatIntervalSec], Mode=OneWay}" />
                                        </StackPanel>
                                        <TextBox
                                            InputScope="Number"
                                            MaxLength="2"
                                            Text="{Binding Config.McProtocols.HeartbeatInterval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </StackPanel>
                                </StackPanel>
                                <Separator Margin="0,5" />
                            </StackPanel>
                        </ScrollViewer>

                        <ui:Card
                            Grid.Column="1"
                            Margin="0"
                            VerticalAlignment="Stretch"
                            VerticalContentAlignment="Top">
                            <ListBox
                                x:Name="InstantMessageListBox"
                                VerticalAlignment="Top"
                                Background="Transparent"
                                ItemContainerStyle="{StaticResource CustomListBoxItemStyle}"
                                ItemsSource="{Binding InstantMessage}"
                                MouseEnter="ListBox_MouseEnter"
                                MouseLeave="ListBox_MouseLeave"
                                Template="{StaticResource CustomListBoxTemplate}"
                                VirtualizingStackPanel.IsVirtualizing="True"
                                VirtualizingStackPanel.VirtualizationMode="Recycling">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                            <TextBlock
                                                Width="95"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                                Text="{Binding Timestamp, StringFormat='HH:mm:ss.fff'}" />
                                            <md:PackIcon
                                                Margin="0,0,5,0"
                                                VerticalAlignment="Center"
                                                Foreground="{Binding Level, Converter={StaticResource InfoLevelToIconColorConverter}}"
                                                Kind="{Binding Level, Converter={StaticResource InfoLevelToIconKindConverter}}" />
                                            <TextBox
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Center"
                                                Background="Transparent"
                                                BorderThickness="0"
                                                IsReadOnly="True"
                                                Text="{Binding Message}"
                                                TextAlignment="Left"
                                                TextWrapping="Wrap" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.Resources>
                                    <ResourceDictionary>
                                        <ResourceDictionary.MergedDictionaries>
                                            <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml" />
                                        </ResourceDictionary.MergedDictionaries>
                                        <Style TargetType="ListBox">
                                            <Setter Property="BorderBrush" Value="{DynamicResource MasBorderBrush}" />
                                            <Setter Property="BorderThickness" Value="0,0,0,1" />
                                        </Style>
                                    </ResourceDictionary>
                                </ListBox.Resources>
                            </ListBox>
                        </ui:Card>
                    </Grid>

                    <Border
                        Grid.Row="3"
                        Margin="10,0"
                        Padding="10,5"
                        Background="{DynamicResource PrismaTalkBackgroundBrush}"
                        BorderBrush="{DynamicResource PopupBorderCornerRadiusBrush}"
                        BorderThickness="0,1,0,0">
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <TextBlock FontSize="12" Text="{Binding CopyrightInformation}" />
                            <TextBlock FontSize="12" Text="{Binding VersionInformation}" />
                            <TextBlock Margin="10,0,0,0" FontSize="12">
                                <Hyperlink NavigateUri="https://github.com/MAS-Copilot/mc-protocol-next" RequestNavigate="Hyperlink_RequestNavigate">
                                    Source code(GitHub)
                                </Hyperlink>
                            </TextBlock>
                        </StackPanel>
                    </Border>
                </Grid>
            </Border>
        </Border>

        <Grid x:Name="TipsNotificationHost" Panel.ZIndex="9999" />
    </Grid>

</Window>
